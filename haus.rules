
/*
rule "Speedtest init"
when
    System started
then
	Alarmswitch.sendCommand(OFF)
end
*/



val String filename = "speedtest.rules"

rule "Speedtest init"
when
    System started
then
    createTimer(now.plusSeconds(195)) [|
        if (SpeedtestRerun.state == NULL) SpeedtestRerun.postUpdate(OFF)
        if (SpeedtestRunning.state == NULL) SpeedtestRunning.postUpdate("-")
        if (SpeedtestSummary.state == NULL || SpeedtestSummary.state == "")
            SpeedtestSummary.postUpdate("⁉ (unbekannt)")
    ]
end





rule "Speedtest"
when
    //Time cron "0 0 5,13 * * ?" or
    //"0 0/5 * * * ?" 
    Time cron "0 0/15 * * * ?" or
    Item SpeedtestRerun received command ON
then
    logInfo(filename, "--> speedtest executed...")
    SpeedtestRunning.postUpdate("Messung läuft...")

    // update timestamp for last execution
    SpeedtestResultDate.postUpdate(new DateTimeType())

    // execute the script, you may have to change the path depending on your system
    var String speedtestCliOutput = executeCommandLine("/usr/local/bin/speedtest-cli@@--simple", 120*1000)

    // for debugging:
    //var String speedtestCliOutput = "Ping: 43.32 ms\nDownload: 21.64 Mbit/s\nUpload: 4.27 Mbit/s"
    //logInfo(filename, "--> speedtest output:\n" + speedtestCliOutput + "\n\n")

    SpeedtestRunning.postUpdate("Datenauswertung...")

    // starts off with a fairly simple error check, should be enough to catch all problems I can think of
    if (speedtestCliOutput.startsWith("Ping") && speedtestCliOutput.endsWith("Mbit/s")) {
        var String[] results = speedtestCliOutput.split("\\r?\\n")
        var float ping = new java.lang.Float(results.get(0).split(" ").get(1))
        var float down = new java.lang.Float(results.get(1).split(" ").get(1))
        var float up   = new java.lang.Float(results.get(2).split(" ").get(1))
        SpeedtestResultPing.postUpdate(ping)
        SpeedtestResultDown.postUpdate(down)
        SpeedtestResultUp.postUpdate(up)
        SpeedtestSummary.postUpdate(String::format("ᐁ  %.1f Mbit/s  ᐃ %.1f Mbit/s (%.0f ms)", down, up, ping))
        SpeedtestRunning.postUpdate("-")
        logInfo(filename, "--> speedtest finished.")
    } else {
        SpeedtestResultPing.postUpdate(0)
        SpeedtestResultDown.postUpdate(0)
        SpeedtestResultUp.postUpdate(0)
        SpeedtestSummary.postUpdate("(unbekannt)")
        SpeedtestRunning.postUpdate("Fehler bei der Ausführung")
        logError(filename, "--> speedtest failed. Output:\n" + speedtestCliOutput + "\n\n")
    }
    SpeedtestRerun.postUpdate(OFF)
end

//Tuerklingesensor

rule "Event_DoorBell"
when
        Item GF_Klingel changed from OFF to ON
then
	 //logInfo("tuerklingel changed")
	 //var device="http://192.168.1.4:8081?action=jpeg"
	 //val outputFile = "/home/openhabian/snap/tuerklingelbild.jpg"
	 //var cmd = "curl -m 10 -o " + outputFile + " " + url

	 var cmd ="ffmpeg -f MJPEG -y -i  http://192.168.1.4:8081?action=stream -r 1 -vframes 1 -q:v 1 /tmp/tuerklingelbild.jpg"
	 executeCommandLine(cmd)
	 //pushover("Es hat geklingelt!")
	 Thread::sleep(6000)
	 //sendPushoverMessage(pushoverBuilder("test message").withAttachment("/path/to/file.jpeg"))
	 sendPushoverMessage(pushoverBuilder("Es hat geklingelt!").withAttachment("/tmp/tuerklingelbild.jpg"))	
	 //pushover("Es hat geklingelt!")
	 
end

//Batterie status check

rule "Batterie THBuero leer"
when
    Item GF_Homeoffice_BATTERY_low_Bat changed to ON
	
then
    pushover("Achtung Batterie vom Buero wechseln!")
 
end


rule "Batterie Aussentemp leer"
when
    Item GF_Outside_Temperature_BATTERY_low_Bat changed to ON
	
then
    pushover("Achtung Batterie vom Aussesensor wechseln!")
 
end


rule "Batterie THEsszimmer leer"
when
    Item GF_LivingDining_BATTERY_STATE changed to ON
	
then
    pushover("Achtung Batterie vom Esszimmer wechseln!")
 
end


rule "Batterie THBalkon leer"
when
    Item GF_TerraceLiving_BATTERY_STATE changed to ON
	
then
    pushover("Achtung Batterie vom TH Balkon wechseln!")
 
end

rule "Batterie THBathroom leer"
when
    Item GF_Bathroom_BATTERY_STATE changed to ON
	
then
    pushover("Achtung Batterie vom TH Bad wechseln!")
 
end

rule "Batterie THMasterroom leer"
when
    Item FF_MasterBedroom_BATTERY_STATE changed to ON
	
then
    pushover("Achtung Batterie vom Elternschlafzimmer wechseln!")
 
end


rule "Batterie THAngelina leer"
when
    Item FF_NannyRoom_BATTERY_STATE changed to ON
	
then
    pushover("Achtung Batterie von TH Zimmer Angelina wechseln!")
 
end


rule "Batterie THKueche leer"
when
    Item GF_Kueche_BATTERY_STATE changed to ON
	
then
    pushover("Achtung Batterie vom TH Kueche wechseln!")
 
end

rule "Batterie THStreedLiving leer"
when	
	Item GF_StreedLiving_BATTERY_STATE changed to ON
then
	pushover("Achtung Batterie von TH WohnzimmerStrasse wechseln!")
end




//Steckdose und Trockner

rule "Trockner"

when 
	Item leistungsmesserLeistung changed
then
	logInfo("Log","leistungsmesserLeistung changed")
	logInfo("Log",leistungsmesserLeistung.state.toString)
	if (leistungsmesserLeistung.state < 3 && statusTrockner.state==OFF)
	{
		//sendNotification("uwe.stockemer@posteo.de", "Trockner ist fertig!")
		sendNotification("doris.ewen@posteo.de", "Trockner ist fertig!")
		pushover("Trockner ist fertig")
		statusTrockner.sendCommand(ON)
		//logInfo("Log","statusTrockner <3")
		//logInfo("Log",leistungsmesserLeistung.state.toString)
	}
	else
	{
		if (leistungsmesserLeistung.state > 100)
		{
		  statusTrockner.sendCommand(OFF)
//		  logInfo("Log","statusTrockner >100")
//		  logInfo("Log",leistungsmesserLeistung.state.toString)
		}
	}

end 

rule "Alarm_Window_Dinningroom"

when
	Item GF_LivingDining_Window received update
then
     	
	if (GF_LivingDining_Window.state.toString=="OPEN" && Alarmswitch.state==ON)
	{
 	pushover("Achtung Eindringling im Esszimmerfenster")
	alarmbox.sendCommand(ON)
	 
        }     
	
end

rule "Alarm_Balkontuer"

when
	Item GF_TerraceLiving_Window received update

then
	if (GF_TerraceLiving_Window.state.toString=="OPEN" && Alarmswitch.state==ON)
	{
 	pushover("Achtung Eindringling im Wohnzimmer")
//	alarmbox.sendCommand(ON) 
        }     
	

end


rule "Alarm_Eingangstuer"

when
	Item Entryway_Door received update

then
	if (Entryway_Door.state.toString=="OPEN" && Alarmswitch.state==ON)
	{
 	pushover("Achtung Eindringling im Eingangsbereich")
	alarmbox.sendCommand(ON) 
        }     
	

end


rule "remote_alarm_ein"
		
when 
	//zweiter Knopf der Fernbedienung
	Item remote_uwe_alarm_ein received update 	
	
then
	if (Alarmswitch.state==OFF)
	{
		Alarmswitch.sendCommand(ON)
		//pushover("Alarm ist eingeschaltet")
 		sendNotification("uwe.stockemer@posteo.de", "Alarm ist eingeschaltet")
		sendNotification("doris.ewen@posteo.de", "Alarm ist eingeschaltet")

	}
end  

rule "remote_alarm_aus"
		
when 
	//zweiter Knopf der Fernbedienung
	Item remote_uwe_alarm_aus received update
	
	
then
	if (Alarmswitch.state==ON)
	{
		Alarmswitch.sendCommand(OFF)
		//pushover("Alarm ist ausgeschaltet")
		sendNotification("uwe.stockemer@posteo.de", "Alarm ist ausgeschaltet")
		sendNotification("doris.ewen@posteo.de", "Alarm ist ausgeschaltet")

	}
end  

rule "Button Heizung_down"

when Item Heizung_down received command

then

	if (receivedCommand == ON)
	{
	he_set_temp_GF_Bathroom_Temperature.postUpdate(15)
        he_set_temp_GF_Bathroom_Temperature.sendCommand(15)
        he_set_temp_GF_Homeoffice_Temperature.postUpdate(15)
        he_set_temp_GF_Homeoffice_Temperature.sendCommand(15)
        he_set_GF_total_Temperature.sendCommand(17)  
	}
	else
	{
        he_set_GF_total_Temperature.postUpdate(21) 
	he_set_GF_total_Temperature.sendCommand(21)
        he_set_temp_GF_Bathroom_Temperature.postUpdate(21)
        he_set_temp_GF_Bathroom_Temperature.sendCommand(21)
        Heizung_auto.sendCommand(ON) 
	}

end


 
rule "Button Alarm_on_off" 
when 
    Item Alarmswitch received command
then 
   
   if (receivedCommand == ON) {
  
		
       		//pushover("Alarm ist eingeschaltet")
		sendNotification("uwe.stockemer@posteo.de", "Alarm ist eingeschaltet")
		sendNotification("doris.ewen@posteo.de", "Alarm ist eingeschaltet")

       
    } 
    else {
	
        	//pushover("Alarm ist ausgeschaltet")
		sendNotification("uwe.stockemer@posteo.de", "Alarm ist ausgeschaltet")
		sendNotification("doris.ewen@posteo.de", "Alarm ist ausgeschaltet")	
    } 
end
